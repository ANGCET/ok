local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
   Name = "Sexy Banana",
   LoadingTitle = "Happy Happy Happy",
   LoadingSubtitle = "by Sirius",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil,
      FileName = nil,
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink",
      RememberJoins = true
   },
   KeySystem = false,
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided",
      FileName = "Key",
      SaveKey = true,
      GrabKeyFromSite = false,
      Key = {"Hello"}
   }
})
--
local MainTab = Window:CreateTab("Main",nil)
local MainSection = MainTab:CreateSection("Main")

function Blyke1()
while _G.Blyke1 == true do
    task.wait(0.00001)
local args = {
    [1] = workspace:WaitForChild("Enemies"):WaitForChild("Blyke")
}

game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Damage"):FireServer(unpack(args))
  end
end

function Blyke2()
while _G.Blyke2 == true do
    task.wait(0.00001)
    function getNil(name,class) for _,v in next, getnilinstances() do if v.ClassName==class and v.Name==name then return v;end end end

local args = {
    [1] = getNil("Blyke" ,"Model")
}

game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Damage"):FireServer(unpack(args))
  end
end

function Lin1()
while _G.Lin1 == true do
    task.wait(0.00001)
    local args = {
    [1] = workspace:WaitForChild("Enemies"):WaitForChild("Lin")
}

game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Damage"):FireServer(unpack(args))
  end
end

function Lin2()
while _G.Lin2 == true do
    task.wait(0.0001)
    function getNil(name,class) for _,v in next, getnilinstances() do if v.ClassName==class and v.Name==name then return v;end end end

local args = {
    [1] = getNil("Lin" ,"Model")
}

game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Damage"):FireServer(unpack(args))
  end
end

function Remi1()
while _G.Remi1 == true do
    task.wait(0.00001)
local args = {
    [1] = workspace:WaitForChild("Enemies"):WaitForChild("Remi")
}

game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Damage"):FireServer(unpack(args))
  end
end

function Remi2()
while _G.Remi2 == true do
    task.wait(0.00001)
    function getNil(name,class) for _,v in next, getnilinstances() do if v.ClassName==class and v.Name==name then return v;end end end

local args = {
    [1] = getNil("Remi" ,"Model")
}

game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Damage"):FireServer(unpack(args))
  end
end

function Rein1()
while _G.Rein1 == true do
    task.wait(0.0001)
local args = {
    [1] = workspace:WaitForChild("Enemies"):WaitForChild("Rein")
}

game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Damage"):FireServer(unpack(args))
  end
end

function Rein2()
while _G.Rein2 == true do
    task.wait(0.0001)
    function getNil(name,class) for _,v in next, getnilinstances() do if v.ClassName==class and v.Name==name then return v;end end end

local args = {
    [1] = getNil("Rein" ,"Model")
}

game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Damage"):FireServer(unpack(args))
  end
end

function Broven1()
while _G.Broven1 == true do
    task.wait(0.0001)
    local args = {
    [1] = workspace:WaitForChild("Enemies"):WaitForChild("Broven")
}

game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Damage"):FireServer(unpack(args))
  end
end

function Broven2()
while _G.Broven2 == true do
    task.wait(0.0001)
    function getNil(name,class) for _,v in next, getnilinstances() do if v.ClassName==class and v.Name==name then return v;end end end

local args = {
    [1] = getNil("Broven" ,"Model")
}

game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Damage"):FireServer(unpack(args))
  end
end

function Gavin1()
while _G.Gavin1 == true do
    task.wait(0.0001)
    local args = {
    [1] = workspace:WaitForChild("Enemies"):WaitForChild("Gavin")
}

game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Damage"):FireServer(unpack(args))
  end
end

function Gavin2()
while _G.Gavin2 == true do
    task.wait(0.0001)
    function getNil(name,class) for _,v in next, getnilinstances() do if v.ClassName==class and v.Name==name then return v;end end end

local args = {
    [1] = getNil("Gavin" ,"Model")
}

game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Damage"):FireServer(unpack(args))
  end
end

function Elaine1()
while _G.Elaine1 == true do
    task.wait(0.001)
    local args = {
    [1] = workspace:WaitForChild("Enemies"):WaitForChild("Elaine")
}

game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Damage"):FireServer(unpack(args))
  end
end

function Elaine2()
while _G.Elaine2 == true do
    task.wait(0.0001)
    function getNil(name,class) for _,v in next, getnilinstances() do if v.ClassName==class and v.Name==name then return v;end end end

local args = {
    [1] = getNil("Elaine" ,"Model")
}

game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Damage"):FireServer(unpack(args))
  end
end

function Zeke1()
while _G.Zeke1 == true do
    task.wait(0.0001)
    local args = {
    [1] = workspace:WaitForChild("Enemies"):WaitForChild("Zeke")
}

game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Damage"):FireServer(unpack(args))
  end
end

function Zeke2()
while _G.Zeke2 == true do
    task.wait(0.0001)
    function getNil(name,class) for _,v in next, getnilinstances() do if v.ClassName==class and v.Name==name then return v;end end end

local args = {
    [1] = getNil("Zeke" ,"Model")
}

game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Damage"):FireServer(unpack(args))
  end
end

function Rei1()
while _G.Rei1 == true do
    task.wait(0.0001)
    local args = {
    [1] = workspace:WaitForChild("Enemies"):WaitForChild("Rei")
}

game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Damage"):FireServer(unpack(args))
  end
end

function Rei2()
while _G.Rei2() == true do
    task.wait(0.0001)
    function getNil(name,class) for _,v in next, getnilinstances() do if v.ClassName==class and v.Name==name then return v;end end end

local args = {
    [1] = getNil("Rei" ,"Model")
}

game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Damage"):FireServer(unpack(args))
  end
end

function Arlo1()
while _G.Arlo1 == true do
    task.wait(0.0001)
    local args = {
    [1] = workspace:WaitForChild("Enemies"):WaitForChild("Arlo")
}

game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Damage"):FireServer(unpack(args))
  end
end

function Arlo2()
while _G.Arlo2 == true do
    task.wait(0.0001)
    function getNil(name,class) for _,v in next, getnilinstances() do if v.ClassName==class and v.Name==name then return v;end end end

local args = {
    [1] = getNil("Arlo" ,"Model")
}

game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Damage"):FireServer(unpack(args))
  end
end
--
_G.Blyke1 = true
_G.Blyke2 = true
_G.Lin1 = true
_G.Lin2 = true
_G.Remi1 = true
_G.Remi2 = true
_G.Rein1 = true
_G.Rein2 = true
_G.Broven1 = true
_G.Broven2 = true
_G.Gavin1 = true
_G.Gavin2 = true
_G.Elaine1 = true
_G.Elaine2 = true
_G.Zeke1 = true
_G.Zeke2 = true
_G.Rei1 = true
_G.Rei2 = true
_G.Arlo1 = true
_G.Arlo2 = true

local Toggle = MainTab:CreateToggle({
   Name = "Blyke1",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
      _G.Blyke1 = Value
      Blyke1()
   end,
})

local Toggle = MainTab:CreateToggle({
   Name = "Blyke2",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
      _G.Blyke2 = Value
      Blyke2()
   end,
})

local Toggle = MainTab:CreateToggle({
   Name = "Lin1",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
      _G.Lin1 = Value
      Lin1()
   end,
})

local Toggle = MainTab:CreateToggle({
   Name = "Lin2",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
      _G.Lin2 = Value
      Lin2()
   end,
})

local Toggle = MainTab:CreateToggle({
   Name = "Remi1",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
      _G.Remi1 = Value
      Remi1()
   end,
})

local Toggle = MainTab:CreateToggle({
   Name = "Remi2",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
      _G.Remi2 = Value
      Remi2()
   end,
})

local Toggle = MainTab:CreateToggle({
   Name = "Rein1",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
      _G.Rein1 = Value
      Rein1()
   end,
})

local Toggle = MainTab:CreateToggle({
   Name = "Rein2",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
      _G.Rein2 = Value
      Rein2()
   end,
})

local Toggle = MainTab:CreateToggle({
   Name = "Broven1",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
      _G.Broven1 = Value
      Broven1()
   end,
})

local Toggle = MainTab:CreateToggle({
   Name = "Broven2",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
      _G.Broven2 = Value
      Broven2()
   end,
})

local Toggle = MainTab:CreateToggle({
   Name = "Gavin1",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
      _G.Gavin1 = Value
      Gavin1()
   end,
})

local Toggle = MainTab:CreateToggle({
   Name = "Gavin2",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
      _G.Gavin2 = Value
      Gavin2()
   end,
})

local Toggle = MainTab:CreateToggle({
   Name = "Elaine1",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
      _G.Elaine1 = Value
      Elaine1()
   end,
})

local Toggle = MainTab:CreateToggle({
   Name = "Elaine2",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
      _G.Elaine2 = Value
      Elaine2()
   end,
})

local Toggle = MainTab:CreateToggle({
   Name = "Zeke1",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
      _G.Zeke1 = Value
      Zeke1()
   end,
})

local Toggle = MainTab:CreateToggle({
   Name = "Zeke2",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
      _G.Zeke2 = Value
      Zeke2()
   end,
})

local Toggle = MainTab:CreateToggle({
   Name = "Rei1",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
      _G.Rei1 = Value
      Rei1()
   end,
})

local Toggle = MainTab:CreateToggle({
   Name = "Rei2",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
      _G.Rei2 = Value
      Rei2()
   end,
})

local Toggle = MainTab:CreateToggle({
   Name = "Arlo1",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
      _G.Arlo1 = Value
      Arlo1()
   end,
})

local Toggle = MainTab:CreateToggle({
   Name = "Arlo2",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
      _G.Arlo2 = Value
      Arlo2()
   end,
})

local MiscTab = Window:CreateTab("Misc",nil)
local MiscSection = MainTab:CreateSection("Misc")

function AutoStrength()
while _G.AutoStrength == true do
    task.wait(0.001)
    local args = {
    [1] = "UpgradeStrength"
}

game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Interact"):FireServer(unpack(args))
  end
end

function AutoAbility()
while _G.AutoAbility == true do
    task.wait(0.0001)
    local args = {
    [1] = "UpgradeAbility"
}

game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Interact"):FireServer(unpack(args))
  end
end

_G.AutoStrength = true
_G.AutoAbility = true

local Toggle = MiscTab:CreateToggle({
   Name = "Auto Strength",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
      _G.AutoStrength = Value
      AutoStrength()
   end,
})

local Toggle = MiscTab:CreateToggle({
   Name = "Auto Ability",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
      _G.AutoAbility = Value
      AutoAbility()
   end,
})
